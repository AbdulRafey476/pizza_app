{"version":3,"sources":["app/pages/home/Home.js","app/components/pizza/PizzaAddModal.js","app/components/pizza/PizzaUpdateModal.js","app/components/pizza/PizzaList.js","app/components/pizza/SinglePizza.js","app/pages/pizza/Pizza.js","app/components/order/OrderModal.js","app/components/order/OrderListModal.js","app/components/order/PizzaList.js","app/components/order/SinglePizza.js","app/components/order/OrderList.js","app/pages/order/Order.js","app/Route.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","style","margin","width","padding","Image_default","height","src","thumbnail","Component","PizzaAddModal","props","Modal","isOpen","newPizzaModal","toggle","togglenewPizzaModal","ModalHeader","ModalBody","InputGroup","className","Input","onChange","event","addNewPizzaHandler","placeholder","InputGroupAddon","addonType","ModalFooter","Button","color","onClick","postNewPizzaHandler","PizzaUpdateModal","updatePizzaModal","toggleUpdatePizzaModal","value","updatePizza","name","updatePorpPizzaHandler","description","category","type","size","price","image","putPizzaHandler","_id","PizzaList","Table","pizzas","SinglePizza","_ref","pizza","updatePizzaHandler","deletePizzaHandler","key","base_url","Pizza","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newPizza","inherits","createClass","_this2","api","concat","axios","get","then","res","setState","data","prop","target","_this3","post","componentWillMount","catch","ex","alert","response","_this4","updatedPizza","_","pick","put","_this5","window","confirm","delete","_this6","map","pizza_SinglePizza","bind","Container","Row","Col","float","pizza_PizzaAddModal","pizza_PizzaUpdateModal","pizza_PizzaList","OrderModal","orderPizzaModal","toggleOrderPizzaModal","hidden","defaultValue","orderPizza","costumer","onChangePizzaQtyHandler","fontSize","total","disabled","postOrderHandler","OrderListModal","orderListModal","toggleOrderListModal","maxWidth","my_orders","total_amt","orderPizzaHandler","OrderList","my_order","quantity","Order","customer_order_api","totalAmtHandler","sum","qty","Number","isNaN","order_SinglePizza","order_OrderList","order_OrderModal","order_OrderListModal","order_PizzaList","AppRouter","assertThisInitialized","react_router_dom","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","react_router","path","exact","component","App","Route","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8363693.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ margin: 'auto', width: '50%', padding: '10px' }}>\r\n                <Image\r\n                    style={{ height: \"700px\", width: '100%' }}\r\n                    src=\"https://therecipecritic.com/wp-content/uploads/2018/08/zucchini_crust_pizza-1-of-1.jpg\"\r\n                    thumbnail\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\n\r\nconst PizzaAddModal = (props) => {\r\n    return (\r\n        <Modal isOpen={props.newPizzaModal} toggle={() => props.togglenewPizzaModal()}>\r\n            <ModalHeader toggle={() => props.togglenewPizzaModal()}>Add New Pizza</ModalHeader>\r\n            <ModalBody>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"name\", event)} placeholder=\"name\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Name</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"description\", event)} placeholder=\"description\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Description</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"category\", event)} placeholder=\"category\"\r\n                    />\r\n                    <InputGroupAddon addonType=\"prepend\">Category</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"type\", event)} placeholder=\"type\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Type</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"size\", event)} placeholder=\"size\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Size</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"price\", event)} placeholder=\"price\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Price</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.addNewPizzaHandler(\"image\", event)} placeholder=\"image\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Image</InputGroupAddon>\r\n                </InputGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" onClick={() => props.postNewPizzaHandler()}>Add</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PizzaAddModal\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\n\r\nconst PizzaUpdateModal = (props) => {\r\n    return (\r\n        <Modal isOpen={props.updatePizzaModal} toggle={() => props.toggleUpdatePizzaModal()}>\r\n            <ModalHeader toggle={() => props.toggleUpdatePizzaModal()}>Update Pizza</ModalHeader>\r\n            <ModalBody>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input value={props.updatePizza.name} onChange={event => props.updatePorpPizzaHandler(\"name\", event)} placeholder=\"name\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Name</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input value={props.updatePizza.description} onChange={event => props.updatePorpPizzaHandler(\"description\", event)} placeholder=\"description\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Description</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input\r\n                        value={props.updatePizza.category} onChange={event => props.updatePorpPizzaHandler(\"category\", event)} placeholder=\"category\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Category</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input value={props.updatePizza.type} onChange={event => props.updatePorpPizzaHandler(\"type\", event)} placeholder=\"type\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Type</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input value={props.updatePizza.size} onChange={event => props.updatePorpPizzaHandler(\"size\", event)} placeholder=\"size\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Size</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input value={props.updatePizza.price} onChange={event => props.updatePorpPizzaHandler(\"price\", event)} placeholder=\"price\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Price</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input value={props.updatePizza.image} onChange={event => props.updatePorpPizzaHandler(\"image\", event)} placeholder=\"image\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Image</InputGroupAddon>\r\n                </InputGroup>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button onClick={() => props.putPizzaHandler(props.updatePizza._id)} color=\"primary\">Update</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PizzaUpdateModal\r\n","import React from 'react'\r\nimport { Table } from \"reactstrap\";\r\n\r\nconst PizzaList = (props) => {\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>image</th>\r\n                    <th>name</th>\r\n                    <th>description</th>\r\n                    <th>category</th>\r\n                    <th>type</th>\r\n                    <th>size</th>\r\n                    <th>price</th>\r\n                    <th>actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{props.pizzas}</tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default PizzaList\r\n","import React from 'react'\r\nimport Image from \"react-bootstrap/Image\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nconst SinglePizza = ({ pizza, updatePizzaHandler, deletePizzaHandler }) => {\r\n    return (\r\n        <tr key={pizza._id}>\r\n            <td>\r\n                <Image style={{ height: \"100px\", width: \"100px\" }} src={pizza.image} thumbnail />\r\n            </td>\r\n            <td>{pizza.name}</td>\r\n            <td>{pizza.description}</td>\r\n            <td>{pizza.category}</td>\r\n            <td>{pizza.type}</td>\r\n            <td>{pizza.size}</td>\r\n            <td>${pizza.price}</td>\r\n            <td>\r\n                <Button color=\"success\" size=\"sm\" style={{ width: \"100%\" }} onClick={() => updatePizzaHandler(pizza)}>Edit</Button>\r\n                <Button className=\"mt-2\" color=\"danger\" size=\"sm\" style={{ width: \"100%\" }} onClick={() => deletePizzaHandler(pizza._id)}>Delete</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default SinglePizza\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Pizza.css\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport _ from \"lodash\";\r\n\r\nimport PizzaAddModal from \"../../components/pizza/PizzaAddModal\";\r\nimport PizzaUpdateModal from \"../../components/pizza/PizzaUpdateModal\";\r\nimport PizzaList from \"../../components/pizza/PizzaList\";\r\nimport SinglePizza from \"../../components/pizza/SinglePizza\";\r\n\r\nconst base_url = \"http://localhost:3232\";\r\n\r\nexport class Pizza extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      pizzas: [],\r\n      newPizzaModal: false,\r\n      updatePizzaModal: false,\r\n      newPizza: { name: \"\", description: \"\", category: \"\", type: \"\", size: \"\", price: \"\", image: \"\" },\r\n      updatePizza: {}\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let api = `${base_url}/api/pizza`;\r\n    axios.get(api).then(res => this.setState({ pizzas: res.data }));\r\n  }\r\n\r\n  togglenewPizzaModal() {\r\n    this.setState({ newPizzaModal: !this.state.newPizzaModal });\r\n  }\r\n\r\n  toggleUpdatePizzaModal() {\r\n    this.setState({ updatePizzaModal: !this.state.updatePizzaModal });\r\n  }\r\n\r\n  updatePizzaHandler(pizza) {\r\n    this.setState({ updatePizzaModal: !this.state.updatePizzaModal, updatePizza: pizza });\r\n  }\r\n\r\n  updatePorpPizzaHandler(prop, event) {\r\n    let updatePizza = this.state.updatePizza;\r\n\r\n    updatePizza[prop] = event.target.value;\r\n\r\n    this.setState({ updatePizza });\r\n  }\r\n\r\n  addNewPizzaHandler(prop, event) {\r\n    let newPizza = this.state.newPizza;\r\n\r\n    newPizza[prop] = event.target.value;\r\n\r\n    this.setState({ newPizza });\r\n  }\r\n\r\n  postNewPizzaHandler() {\r\n    let api = `${base_url}/api/pizza`;\r\n\r\n    axios\r\n      .post(api, this.state.newPizza)\r\n      .then(res => {\r\n        this.componentWillMount();\r\n        this.togglenewPizzaModal();\r\n      })\r\n      .catch(ex => alert(ex.response.data));\r\n  }\r\n\r\n  putPizzaHandler(_id) {\r\n    let api = `${base_url}/api/pizza/${_id}`;\r\n    let updatedPizza = _.pick(this.state.updatePizza, [\"name\", \"description\", \"category\", \"type\", \"size\", \"price\", \"image\"]);\r\n    axios\r\n      .put(api, updatedPizza)\r\n      .then(res => {\r\n        this.componentWillMount();\r\n        this.toggleUpdatePizzaModal();\r\n      })\r\n      .catch(ex => alert(ex.response.data));\r\n  }\r\n\r\n  deletePizzaHandler(_id) {\r\n    let confirm = window.confirm(\"Are your sure?\");\r\n    if (!confirm) return;\r\n\r\n    let api = `${base_url}/api/pizza/${_id}`;\r\n\r\n    axios\r\n      .delete(api)\r\n      .then(res => this.componentWillMount())\r\n      .catch(ex => alert(ex.response.data));\r\n  }\r\n\r\n  render() {\r\n    let pizzas = this.state.pizzas.map(pizza => {\r\n      return (\r\n        <SinglePizza\r\n          pizza={pizza}\r\n          updatePizzaHandler={this.updatePizzaHandler.bind(this)}\r\n          deletePizzaHandler={this.deletePizzaHandler.bind(this)}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Button color=\"primary\" onClick={this.togglenewPizzaModal.bind(this)} style={{ float: \"right\" }} className=\"mt-2 mb-2\">Add Pizza</Button>\r\n\r\n            <PizzaAddModal\r\n              newPizzaModal={this.state.newPizzaModal}\r\n              togglenewPizzaModal={this.togglenewPizzaModal.bind(this)}\r\n              addNewPizzaHandler={this.addNewPizzaHandler.bind(this)}\r\n              postNewPizzaHandler={this.postNewPizzaHandler.bind(this)}\r\n            />\r\n\r\n            <PizzaUpdateModal\r\n              updatePizzaModal={this.state.updatePizzaModal}\r\n              updatePizza={this.state.updatePizza}\r\n              toggleUpdatePizzaModal={this.toggleUpdatePizzaModal.bind(this)}\r\n              updatePorpPizzaHandler={this.updatePorpPizzaHandler.bind(this)}\r\n              putPizzaHandler={this.putPizzaHandler.bind(this)}\r\n            />\r\n\r\n            <PizzaList pizzas={pizzas} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pizza;\r\n","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input } from \"reactstrap\";\r\n\r\nconst OrderModal = props => {\r\n    return (\r\n        <Modal isOpen={props.orderPizzaModal} toggle={() => props.toggleOrderPizzaModal()}>\r\n            <ModalHeader toggle={() => props.toggleOrderPizzaModal()}>Order Pizza</ModalHeader>\r\n            <ModalBody>\r\n                <InputGroup hidden className=\"mb-2\">\r\n                    <Input defaultValue={props.orderPizza.costumer} placeholder=\"customer\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Customer</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup hidden className=\"mb-2\">\r\n                    <Input defaultValue={props.orderPizza.pizza} placeholder=\"pizza\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Pizza</InputGroupAddon>\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-2\">\r\n                    <Input onChange={event => props.onChangePizzaQtyHandler(event)} placeholder=\"quantity\" />\r\n                    <InputGroupAddon addonType=\"prepend\">Quantity</InputGroupAddon>\r\n                </InputGroup>\r\n                <span style={{ color: \"red\", fontSize: \"20px\" }}>Total: ${props.orderPizza.total}</span>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button disabled={!props.orderPizza.total} onClick={() => props.postOrderHandler()} color=\"primary\">Order</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default OrderModal\r\n","import React from 'react'\r\nimport { Table, Modal, ModalHeader, ModalBody, } from \"reactstrap\";\r\n\r\nconst OrderListModal = props => {\r\n    return (\r\n        <Modal isOpen={props.orderListModal} toggle={() => props.toggleOrderListModal()} style={{ maxWidth: \"700px\" }}>\r\n            <ModalHeader toggle={() => props.toggleOrderListModal()}>My Orders</ModalHeader>\r\n            <ModalBody>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Pizza</th>\r\n                            <th>Size</th>\r\n                            <th>Type</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{props.my_orders}</tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td />\r\n                            <td />\r\n                            <td />\r\n                            <td />\r\n                            <td />\r\n                            <td>${props.total_amt}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </Table>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\n\r\nexport default OrderListModal\r\n","import React from 'react'\r\nimport { Table } from \"reactstrap\";\r\n\r\nconst PizzaList = props => {\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>image</th>\r\n                    <th>name</th>\r\n                    <th>description</th>\r\n                    <th>category</th>\r\n                    <th>type</th>\r\n                    <th>size</th>\r\n                    <th>price</th>\r\n                    <th>actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{props.pizzas}</tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default PizzaList\r\n","import React from 'react'\r\nimport { Button } from \"reactstrap\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nconst SinglePizza = ({ pizza, orderPizzaHandler }) => {\r\n    return (\r\n        <tr key={pizza._id}>\r\n            <td>\r\n                <Image style={{ height: \"100px\", width: \"100px\" }} src={pizza.image} thumbnail />\r\n            </td>\r\n            <td>{pizza.name}</td>\r\n            <td>{pizza.description}</td>\r\n            <td>{pizza.category}</td>\r\n            <td>{pizza.type}</td>\r\n            <td>{pizza.size}</td>\r\n            <td>${pizza.price}</td>\r\n            <td>\r\n                <Button onClick={() => orderPizzaHandler(pizza)} color=\"success\" size=\"sm\" style={{ width: \"100%\" }}>Order</Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default SinglePizza\r\n","import React from 'react'\r\n\r\nconst OrderList = ({ my_order }) => {\r\n    return (\r\n        <tr key={my_order._id}>\r\n            <td>{my_order.pizza.name}</td>\r\n            <td>{my_order.pizza.size}</td>\r\n            <td>{my_order.pizza.type}</td>\r\n            <td>${my_order.pizza.price}</td>\r\n            <td>{my_order.quantity}</td>\r\n            <td>${my_order.total}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderList\r\n","import React, { Component } from \"react\";\r\nimport \"./Order.css\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport OrderModal from \"../../components/order/OrderModal\";\r\nimport OrderListModal from \"../../components/order/OrderListModal\";\r\nimport PizzaList from \"../../components/order/PizzaList\";\r\nimport SinglePizza from \"../../components/order/SinglePizza\";\r\nimport OrderList from \"../../components/order/OrderList\";\r\n\r\nconst base_url = \"http://localhost:3232\";\r\n\r\nclass Order extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      pizzas: [],\r\n      orderPizzaModal: false,\r\n      orderListModal: false,\r\n      price: 0,\r\n      orderPizza: { costumer: \"5d2dd7eacb03e60a40df53d0\", pizza: \"\", quantity: 1, total: 0 },\r\n      my_orders: [],\r\n      total_amt: 0\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let api = `${base_url}/api/pizza`;\r\n    let customer_order_api = `${base_url}/api/order/customer/${this.state.orderPizza.costumer}`;\r\n\r\n    axios.get(api).then(res => this.setState({ pizzas: res.data }));\r\n\r\n    axios.get(customer_order_api).then(res => {\r\n      this.setState({ my_orders: res.data });\r\n      this.totalAmtHandler();\r\n    });\r\n  }\r\n\r\n  totalAmtHandler() {\r\n    let sum = 0;\r\n    this.state.my_orders.map(my_order => sum += my_order.total);\r\n    this.setState({ total_amt: sum });\r\n  }\r\n\r\n  toggleOrderPizzaModal() {\r\n    this.setState({\r\n      orderPizzaModal: !this.state.orderPizzaModal,\r\n      orderPizza: { costumer: \"5d2dd7eacb03e60a40df53d0\", pizza: \"\", quantity: 1, total: 0 }\r\n    });\r\n  }\r\n\r\n  toggleOrderListModal() {\r\n    this.setState({ orderListModal: !this.state.orderListModal });\r\n  }\r\n\r\n  orderPizzaHandler(pizza) {\r\n    this.toggleOrderPizzaModal();\r\n\r\n    let orderPizza = this.state.orderPizza;\r\n\r\n    orderPizza.pizza = pizza._id;\r\n\r\n    this.setState({ orderPizza, price: pizza.price });\r\n  }\r\n\r\n  onChangePizzaQtyHandler(event) {\r\n    let orderPizza = this.state.orderPizza;\r\n\r\n    let qty = Number(event.target.value);\r\n    if (Number.isNaN(qty)) return alert(\"Please enter only number\");\r\n\r\n    orderPizza.quantity = qty;\r\n    orderPizza.total = qty * this.state.price;\r\n\r\n    this.setState({ orderPizza });\r\n  }\r\n\r\n  postOrderHandler() {\r\n    let api = `${base_url}/api/order`;\r\n\r\n    axios\r\n      .post(api, this.state.orderPizza)\r\n      .then(res => {\r\n        this.componentWillMount();\r\n        this.toggleOrderPizzaModal();\r\n      })\r\n      .catch(ex => alert(ex.response.data));\r\n  }\r\n\r\n  render() {\r\n    let pizzas = this.state.pizzas.map(pizza => <SinglePizza pizza={pizza} orderPizzaHandler={this.orderPizzaHandler.bind(this)} />);\r\n\r\n    let my_orders = this.state.my_orders.map(my_order => <OrderList my_order={my_order} />);\r\n\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <OrderModal\r\n              orderPizzaModal={this.state.orderPizzaModal}\r\n              orderPizza={this.state.orderPizza}\r\n              toggleOrderPizzaModal={this.toggleOrderPizzaModal.bind(this)}\r\n              onChangePizzaQtyHandler={this.onChangePizzaQtyHandler.bind(this)}\r\n              postOrderHandler={this.postOrderHandler.bind(this)}\r\n            />\r\n            <OrderListModal\r\n              my_orders={my_orders}\r\n              orderListModal={this.state.orderListModal}\r\n              total_amt={this.state.total_amt}\r\n              toggleOrderListModal={this.toggleOrderListModal.bind(this)}\r\n            />\r\n\r\n            <Button color=\"primary\" style={{ float: \"right\" }} className=\"mt-2 mb-2\" onClick={() => this.toggleOrderListModal()}>My Orders</Button>\r\n\r\n            <PizzaList pizzas={pizzas} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\n\r\nimport Home from \"./pages/home/Home\";\r\nimport Pizza from \"./pages/pizza/Pizza\";\r\nimport Order from \"./pages/order/Order\";\r\n\r\nclass AppRouter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand href=\"/\">Pizza Order App</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggle} />\r\n            <Collapse isOpen={this.state.isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <NavLink href=\"/pizza\">Pizza</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"/order\">Order</NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </Navbar>\r\n\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/pizza/\" component={Pizza} />\r\n          <Route path=\"/order/\" component={Order} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport Route from \"./app/Route\";\n\nfunction App() {\n  return (\n    <div>\n      <Route />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}